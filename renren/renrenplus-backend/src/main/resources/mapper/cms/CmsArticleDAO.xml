<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.renren.modules.cms.dao.CmsArticleDAO">
  <resultMap id="BaseResultMap" type="io.renren.modules.cms.entity.CmsArticleEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="channel_id" jdbcType="BIGINT" property="channelId" />
    <result column="type_id" jdbcType="BIGINT" property="typeId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="publish_date" jdbcType="TIMESTAMP" property="publishDate" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="author_id" jdbcType="BIGINT" property="authorId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="views_count" jdbcType="INTEGER" property="viewsCount" />
    <result column="comments_count" jdbcType="INTEGER" property="commentsCount" />
    <result column="keywords" jdbcType="VARCHAR" property="keywords" />
    <result column="feature" jdbcType="VARCHAR" property="feature" />
    <result column="channel_name" jdbcType="VARCHAR" property="channelName" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="username" jdbcType="VARCHAR" property="authorName" />
    <result column="content" jdbcType="VARCHAR" property="content" />
  </resultMap>
  
  <select id="listCmsArticle" resultMap="BaseResultMap" parameterType="java.util.Map">
  	select t0.*,t1.channel_name,t2.type_name,t3.username
  	from cms_article t0 left join cms_channel t1 on t0.channel_id=t1.id 
  	left join cms_type t2 on t0.type_id=t2.id 
  	left join sys_user t3 on t0.author_id=t3.user_id 
  	where 1=1 
  	<if test="search != null and search != ''">
  		<bind name="search_like" value="'%' + search + '%'" />
  		and t0.title like #{search_like} 
  		and t0.summary like #{search_like} 
  		and t0.keywords like #{search_like} 
  		and t1.channel_name like #{search_like} 
  		and t2.type_name like #{search_like} 
  		and t3.username like #{search_like} 
  	</if>
  	order by t0.publish_date desc 
  	limit #{offset},#{limit}
  </select>
  
    <insert id="insertArticle" keyColumn="id" keyProperty="id" parameterType="io.renren.modules.cms.entity.CmsArticleEntity" useGeneratedKeys="true">
    insert into cms_article (channel_id, type_id, title, 
      publish_date, summary, author_id, 
      `status`, views_count, comments_count, 
      keywords, feature)
    values (#{channelId,jdbcType=BIGINT}, #{typeId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{publishDate,jdbcType=TIMESTAMP}, #{summary,jdbcType=VARCHAR}, #{authorId,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER}, #{viewsCount,jdbcType=INTEGER}, #{commentsCount,jdbcType=INTEGER}, 
      #{keywords,jdbcType=VARCHAR}, #{feature,jdbcType=VARCHAR})
  </insert>
 </mapper>